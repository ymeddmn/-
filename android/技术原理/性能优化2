
https://www.jianshu.com/p/797395731747

内存优化：
	1、android中经常出现内存优化的点
		a、使用单例模式
		b、使用匿名内部类
		c、使用异步事件handler
		d、使用静态变量
		e、资源未关闭
		f、设置监听
		g、bitmap
	2、内存抖动的危害
		一般是在循环中创建大量对象造成的
		内存抖动可能会造成ui卡顿，因为大量的对象创建会很快消耗剩余内存，导致gc回收，gc会占用大量绘制时间导致ui卡顿
	3、常用内存分析工具
		Heap Snapshot
		Heap Viewer
		MAT
		Allaction Tracking
		TraceView
		LeakCanary
		Lint


UI渲染性能优化
	**android每16ms进行一次绘制，所以绘制操作的计算要在16ms内完成，如果16ms内没有完成则会掉帧，导致UI卡顿
	cpu负责measure、layout等操作
	gpu负责栅格化操作
	在cpu方面最常见的问题是不必要的布局和失效，一般两个原因：
		a、布局层次太深导致cpu计算太多
		b、花费太多时间进行不必要的绘制
	在gpu方面最常见的是过度绘制

	优化建议
		a、没有用的父布局（没有背景没有大小限制）使用merge标签合并减少ui层次
		b、使用LinearLayout排版导致UI层次变深，可以使用RelativeLayout优化
		c、不常用的UI可以使用ViewStub标签

	GPU:
		过度绘制是屏幕上某一个点被绘制了多次，在错层次的ui中如果不可见的ui也在绘制会导致某些像素区域被绘制多次。这样就会浪费大量的cpu和gpu的资源

		GPU优化建议：
			移除window默认的background    window.setbackground(null)
			移除xml中非必要的background

计算性能优化
	运算性能差分为两种情况：
		a、执行耗时较长的方法
		b、代码执行时间段，但是执行频次高

	优化建议：
		a、将不需要在主线程中进行的操作放到子线程中

电量优化
	耗电的操作：
		a、频繁唤醒屏幕
		b、网络请求、定位

	电量优化建议：
		a、耗时任务充电的时候执行
		b、因为wifi的耗电比移动网络低，所以建议wifi连接的时候进行后台网络任务
		c、大频次需要唤醒cpu的操作集中批处理（网络请求也可以批次处理）
		d、定位要及时关闭
		e、



























